syntax = "proto3";

option go_package = "github.com/erkrnt/symphony/api";

package api;

import "api/generic.proto";

service Block {
  rpc GetLogicalVolume(BlockLogicalVolumeRequest) returns (LogicalVolumeMetadata) {}
  rpc GetPhysicalVolume(BlockPhysicalVolumeRequest) returns (PhysicalVolumeMetadata) {}
  rpc GetVolumeGroup(BlockVolumeGroupRequest) returns (VolumeGroupMetadata) {}

  rpc NewLogicalVolume(BlockNewLogicalVolumeRequest) returns (BlockNewLogicalVolumeResponse) {}
  rpc NewPhysicalVolume(BlockPhysicalVolumeRequest) returns (PhysicalVolumeMetadata) {}
  rpc NewVolumeGroup(BlockNewVolumeGroupRequest) returns (VolumeGroupMetadata) {}

  rpc RemoveLogicalVolume(BlockLogicalVolumeRequest) returns (SuccessStatusResponse) {}
  rpc RemovePhysicalVolume(BlockPhysicalVolumeRequest) returns (SuccessStatusResponse) {}
  rpc RemoveVolumeGroup(BlockVolumeGroupRequest) returns (SuccessStatusResponse) {}

  rpc ServiceInit(BlockServiceInitRequest) returns (BlockServiceInitResponse) {}
  rpc ServiceLeave(BlockServiceLeaveRequest) returns (SuccessStatusResponse) {}
}

message BlockServiceInitRequest { string ServiceAddr = 1; }

message BlockServiceInitResponse {
  string ClusterID = 1;
  string ServiceID = 2;
}

message BlockLogicalVolumeRequest {
  string ID = 1;
  string VolumeGroupID = 2;
}

message BlockPhysicalVolumeRequest { string DeviceName = 1; }

message BlockVolumeGroupRequest { string ID = 1; }

message BlockNewLogicalVolumeRequest {
  string ID = 1;
  int64 Size = 2;
  string VolumeGroupID = 3;
}

message BlockNewLogicalVolumeResponse {
  LogicalVolumeMetadata Metadata = 1;
  string TargetAddr = 2;
}

message BlockNewVolumeGroupRequest {
  string DeviceName = 1;
  string ID = 2;
}

message LogicalVolume {
  string ID = 1;
  LogicalVolumeMetadata Metadata = 2;
  int64 Size = 3;
  string TargetAddr = 4;
  string VolumeGroupID = 5;
}

message PhysicalVolume {
  string DeviceName = 1;
  string ID = 2;
  PhysicalVolumeMetadata Metadata = 3;
  string ServiceID = 4;
}

message VolumeGroup {
  string ID = 1;
  VolumeGroupMetadata Metadata = 2;
  string PhysicalVolumeID = 3;
}

message LogicalVolumeMetadata {
  string LvName = 1;
  string VgName = 2;
  string LvAttr = 3;
  string LvSize = 4;
  string PoolLv = 5;
  string Origin = 6;
  string DataPercent = 7;
  string MetadataPercent = 8;
  string MovePv = 9;
  string MirrorLog = 10;
  string CopyPercent = 11;
  string ConvertLv = 12;
}

message PhysicalVolumeMetadata {
  string PvName = 1;
  string VgName = 2;
  string PvFmt = 3;
  string PvAttr = 4;
  string PvSize = 5;
  string PvFree = 6;
}

message VolumeGroupMetadata {
  string VgName = 1;
  string PvCount = 2;
  string LvCount = 3;
  string SnapCount = 4;
  string VgAttr = 5;
  string VgSize = 6;
  string VgFree = 7;
}

message BlockServiceLeaveRequest { string ServiceID = 1; }
