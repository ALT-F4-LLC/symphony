syntax = "proto3";

option go_package = "github.com/erkrnt/symphony/api";

package api;

import "api/block.proto";
import "api/generic.proto";
import "api/service.proto";

service ManagerControl {
  rpc ServiceInit(ManagerControlServiceInitRequest) returns (ManagerControlServiceInitResponse) {}
  rpc ServiceRemove(ManagerControlServiceRemoveRequest) returns (SuccessStatusResponse) {}
}

service ManagerRemote {
  rpc GetLogicalVolume(ManagerLogicalVolumeRequest) returns (LogicalVolume) {}
  rpc GetPhysicalVolume(ManagerPhysicalVolumeRequest) returns (PhysicalVolume) {}
  rpc GetVolumeGroup(ManagerVolumeGroupRequest) returns (VolumeGroup) {}
  
  rpc NewLogicalVolume(ManagerNewLogicalVolumeRequest) returns (LogicalVolume) {}
  rpc NewPhysicalVolume(ManagerNewPhysicalVolumeRequest) returns (PhysicalVolume) {}
  rpc NewVolumeGroup(ManagerNewVolumeGroupRequest) returns (VolumeGroup) {}

  rpc RemoveLogicalVolume(ManagerLogicalVolumeRequest) returns (SuccessStatusResponse) {}
  rpc RemovePhysicalVolume(ManagerPhysicalVolumeRequest) returns (SuccessStatusResponse) {}
  rpc RemoveVolumeGroup(ManagerVolumeGroupRequest) returns (SuccessStatusResponse) {}

  rpc ServiceInit(ManagerServiceInitRequest) returns (ManagerServiceInitResponse) {}
  rpc ServiceJoin(ManagerServiceJoinRequest) returns (ManagerServiceInitResponse) {}
  rpc ServiceLeave(ManagerServiceLeaveRequest) returns (SuccessStatusResponse) {}
  rpc ServiceRemove(ManagerServiceRemoveRequest) returns (SuccessStatusResponse) {}
}

message ManagerControlServiceInitRequest { string ServiceAddr = 1; }

message ManagerControlServiceInitResponse {
  string ClusterID = 1;
  string ServiceID = 2;
}

message ManagerControlLeaveRequest {}

message ManagerControlServiceRemoveRequest { string ServiceID = 1; }

message ManagerServiceInitRequest {
  string ServiceAddr = 1;
  ServiceType ServiceType = 2;
}
message ManagerServiceInitResponse {
  string ClusterID = 1;
  repeated string Endpoints = 3;
  string GossipAddr = 2;
  string ServiceID = 4;
}

message ManagerServiceJoinRequest {
  string ClusterID = 1;
  string ServiceID = 2;
}

message ManagerServiceLeaveRequest { string ServiceID = 1; }

message ManagerServiceRemoveRequest { string ServiceID = 1; }

message ManagerLogicalVolumeRequest { string ID = 1; }

message ManagerPhysicalVolumeRequest { string ID = 1; }

message ManagerVolumeGroupRequest { string ID = 1; }

message ManagerNewLogicalVolumeRequest {
  int64 Size = 1;
  string VolumeGroupID = 2;
}
message ManagerNewPhysicalVolumeRequest {
  string DeviceName = 1;
  string ServiceID = 2;
}
message ManagerNewVolumeGroupRequest {
  string PhysicalVolumeID = 1;
}
